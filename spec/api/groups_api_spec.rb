=begin
#Messente API

#[Messente](https://messente.com) is a global provider of messaging and user verification services. Use Messente API library to send and receive SMS, Viber and WhatsApp messages, blacklist phone numbers to make sure you're not sending any unwanted messages, manage contacts and groups.  Messente builds [tools](https://messente.com/documentation) to help organizations connect their services to people anywhere in the world.

The version of the OpenAPI document: 1.0.1
Contact: messente@messente.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 4.0.0

=end

require 'spec_helper'
require 'json'

# Unit tests for MessenteApi::GroupsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'GroupsApi' do
  before do
    # run before each test
    @api_instance = MessenteApi::GroupsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of GroupsApi' do
    it 'should create an instance of GroupsApi' do
      expect(@api_instance).to be_instance_of(MessenteApi::GroupsApi)
    end
  end

  # unit tests for create_group
  # Creates a new group with the provided name
  # @param group_name 
  # @param [Hash] opts the optional parameters
  # @return [GroupEnvelope]
  describe 'create_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_group
  # Deletes a group
  # @param group_id String in uuid format.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for fetch_group
  # Lists a group
  # @param group_id String in uuid format.
  # @param [Hash] opts the optional parameters
  # @return [GroupEnvelope]
  describe 'fetch_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for fetch_groups
  # Returns all groups
  # @param [Hash] opts the optional parameters
  # @return [GroupListEnvelope]
  describe 'fetch_groups test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_group
  # Updates a group with the provided name
  # @param group_id String in uuid format.
  # @param group_name 
  # @param [Hash] opts the optional parameters
  # @return [GroupEnvelope]
  describe 'update_group test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
